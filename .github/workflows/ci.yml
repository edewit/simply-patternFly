name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run linting
        run: pnpm lint
        
      - name: Run type checking
        run: pnpm -r exec tsc --noEmit
        
      - name: Build packages
        run: pnpm build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '22.x'  # Only upload from one Node version
        with:
          name: build-artifacts
          path: |
            packages/*/dist/
            packages/example/dist/
          retention-days: 7

  lint-and-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Check formatting (if prettier is configured)
        run: |
          if [ -f ".prettierrc" ] || [ -f ".prettierrc.json" ] || [ -f "prettier.config.js" ]; then
            pnpm exec prettier --check .
          else
            echo "No Prettier configuration found, skipping format check"
          fi
        continue-on-error: true
        
      - name: Run ESLint
        run: pnpm lint

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run security audit
        run: pnpm audit --audit-level moderate
        continue-on-error: true  # Don't fail the build on audit issues, but report them

  build-example:
    name: Build Example App
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build all packages
        run: pnpm build
        
      - name: Build example app
        run: pnpm --filter example build
        
      - name: Upload example build
        uses: actions/upload-artifact@v4
        with:
          name: example-app
          path: packages/example/dist/
          retention-days: 30
